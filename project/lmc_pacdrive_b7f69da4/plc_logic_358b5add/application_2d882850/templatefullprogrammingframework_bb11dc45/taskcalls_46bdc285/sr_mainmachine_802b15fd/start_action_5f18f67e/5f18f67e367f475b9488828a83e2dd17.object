{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)5f18f67e-367f-475b-9488-828a83e2dd17","ParentGuid":"(Guid)802b15fd-79d5-49cd-bd94-8749e22869a3","Name":"(string)Start_Action","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)8ac092e5-3128-4e26-9e7e-11016c6684f2","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"8ac092e5","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)(* This step is active until the machine is being enabled *)\n\n(* System generated code, do not change without consulting 'Schneider Electric Automation GmbH' - otherwise you risk instability!!!*)\n\txVirtualSystem := TPL.FC_GetVirtualSystem();\n\t\n\tstMachineInterface.q_sModuleTypeName\t:= c_sModuleTypeName;\n\tstMachineInterface.q_dwModuleType\t\t:= c_dwModuleType;\n\tstMachineInterface.q_udiModuleVersion\t:= c_udiModuleVersion;\n(* End of system generated code, do not change without consulting 'Schneider Electric Automation GmbH' - otherwise you risk instability!!!*)\n\n(* System generated code, could be modified for your application *)\n\tIF(SYSTEMINTERFACE.FC_GetPacDriveBootState() <> 1) THEN\n\t\t(* avoid starting as long as the boot of the controller is not finished *)\n\t\tstMachineInterface.i_xEnable\t:= FALSE; (* set transition condition to FALSE ==> ensure that this step stays active *)\n\n\t\tstMachineInterface.q_etDiag\t\t:= GD.ET_Diag.Ok;\n\t\tstMachineInterface.q_udiDiagExt\t:= ET_DiagExt.WaitUntilControllerFinishedBoot;\n\t\tstMachineInterface.q_sDiagExt\t:= FC_EtDiagExtToString(stMachineInterface.q_udiDiagExt);\n\t\tstMachineInterface.q_sMsg\t\t:= '';\n\tELSE\n\t\tstMachineInterface.q_etDiag\t\t:= GD.ET_Diag.Ok;\n\t\tstMachineInterface.q_udiDiagExt\t:= ET_DiagExt.WaitUntilSercosState4;\n\t\tstMachineInterface.q_sDiagExt\t:= FC_EtDiagExtToString(stMachineInterface.q_udiDiagExt);\n\t\tstMachineInterface.q_sMsg\t\t:= '';\n\t\t\n\t\tIF SystemConfiguration.G_ifSercos.State = 4 \n\t\tTHEN\n\t\t\tAPL.G_ifApplicationLogger.RegisterCommunicationService(\tq_etDiag => ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tq_etDiagExt => );\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tstMachineInterface.i_xEnable\t:= TRUE;\n\t\tEND_IF\n\tEND_IF\n(* End of system generated code, could be modified for your application *)\n\n(* Application specific code *)\n(* ToDo: Add your application specific code here *)\n;\n(* End of application specific code *)\n","LineInfoPersistence":"(string)5f18f67e-367f-475b-9488-828a83e2dd17_Impl_LineIds"}}}},"UniqueIdGenerator":"(string)157"}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","8ac092e5":"{8ac092e5-3128-4e26-9e7e-11016c6684f2}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}